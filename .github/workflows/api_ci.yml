name: API OAS Generator CI
# This workflow tests the OpenAPI Specification (OAS) generator in the api/ folder.
# It validates the Python-based Jinja2 generator, ensures generated Rust code compiles,
# and checks for output stability. For testing the generated algod_client crate itself,
# see the ci_cd.yml workflow where algod integration tests are run as part of tests in algokit utils crate.

on:
  push:
    branches:
      - main
    paths:
      - "api/**"
      - "tools/api_tools/**"
      - "crates/algod_client/**"
      - ".github/workflows/api_ci.yml"
  pull_request:
    branches:
      - main
    paths:
      - "api/**"
      - "tools/api_tools/**"
      - "crates/algod_client/**"
      - ".github/workflows/api_ci.yml"
  workflow_dispatch:

permissions:
  contents: read

env:
  API_DIR: api
  OUTPUT_DIR: crates/algod_client

jobs:
  oas_generator_check:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.85.0
          components: rustfmt

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install bun dependencies
        working-directory: ${{ env.API_DIR }}
        run: bun install

      - name: Install uv dependencies
        working-directory: ${{ env.API_DIR }}/oas_generator
        run: uv sync --extra dev

      - name: Run OAS generator linting
        run: cargo api lint-oas

      - name: Run OAS generator tests
        run: cargo api test-oas

      - name: Generate algod API client
        run: cargo api generate-algod

      - name: Check for output stability
        run: |
          # Add untracked files as empty so they show up in diff
          git add -N ${{ env.OUTPUT_DIR }}
          # Check if generated client differs from committed version
          if ! git diff --exit-code --minimal ${{ env.OUTPUT_DIR }}; then
            echo ""
            echo "‚ùå Generated client differs from committed version!"
            echo "üí° This indicates:"
            echo "   ‚Ä¢ The API specification has changed"
            echo "   ‚Ä¢ The algod_client crate was manually modified"
            echo "   ‚Ä¢ The generator logic has been updated"
            echo ""
            echo "üîß To fix: Run 'cargo api generate-algod' locally and commit the changes"
            exit 1
          fi

      - name: Verify generated code compiles
        run: |
          cargo check --manifest-path Cargo.toml -p algod_client
