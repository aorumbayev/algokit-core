/*
 * for KMD HTTP API
 *
 * API for KMD (Key Management Daemon)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@algorand.com
 * Generated by: Rust OpenAPI Generator
 */

use crate::models;
use serde::{Deserialize, Serialize};

use crate::models::Wallet;

/// APIV1WalletHandle includes the wallet the handle corresponds to
/// and the number of number of seconds to expiration
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct WalletHandle {
    #[serde(rename = "expires_seconds", skip_serializing_if = "Option::is_none")]
    pub expires_seconds: Option<u64>,
    #[serde(rename = "wallet", skip_serializing_if = "Option::is_none")]
    pub wallet: Option<Wallet>,
}

impl WalletHandle {
    /// Default constructor for WalletHandle
    pub fn new() -> WalletHandle {
        WalletHandle::default()
    }
}
