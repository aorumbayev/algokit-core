/*
 * for KMD HTTP API
 *
 * API for KMD (Key Management Daemon)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@algorand.com
 * Generated by: Rust OpenAPI Generator
 */

use crate::models;
use serde::{Deserialize, Serialize};

use crate::models::WalletHandle;

/// APIV1POSTWalletInfoResponse is the response to `POST /v1/wallet/info`
/// friendly:WalletInfoResponse
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct PostWalletInfoResponse {
    #[serde(rename = "error", skip_serializing_if = "Option::is_none")]
    pub error: Option<bool>,
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    #[serde(rename = "wallet_handle", skip_serializing_if = "Option::is_none")]
    pub wallet_handle: Option<WalletHandle>,
}

impl PostWalletInfoResponse {
    /// Default constructor for PostWalletInfoResponse
    pub fn new() -> PostWalletInfoResponse {
        PostWalletInfoResponse::default()
    }
}
