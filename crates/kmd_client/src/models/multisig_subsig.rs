/*
 * for KMD HTTP API
 *
 * API for KMD (Key Management Daemon)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@algorand.com
 * Generated by: Rust OpenAPI Generator
 */

use crate::models;
use serde::{Deserialize, Serialize};

use crate::models::PublicKey;
use crate::models::Signature;

/// MultisigSubsig is a struct that holds a pair of public key and signatures
/// signatures may be empty
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct MultisigSubsig {
    #[serde(rename = "Key", skip_serializing_if = "Option::is_none")]
    pub key: Option<PublicKey>,
    #[serde(rename = "Sig", skip_serializing_if = "Option::is_none")]
    pub sig: Option<Signature>,
}

impl MultisigSubsig {
    /// Default constructor for MultisigSubsig
    pub fn new() -> MultisigSubsig {
        MultisigSubsig::default()
    }
}
