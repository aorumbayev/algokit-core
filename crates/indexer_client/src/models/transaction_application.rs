/*
 * Indexer
 *
 * Algorand ledger analytics API.
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: Rust OpenAPI Generator
 */

use crate::models;
use serde::{Deserialize, Serialize};
use serde_with::{Bytes, serde_as};

use crate::models::BoxReference;
use crate::models::OnCompletion;
use crate::models::StateSchema;

/// Fields for application transactions.
///
/// Definition:
/// data/transactions/application.go : ApplicationCallTxnFields
#[serde_as]
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct TransactionApplication {
    /// \[apid\] ID of the application being configured or empty if creating.
    #[serde(rename = "application-id")]
    pub application_id: u64,
    #[serde(rename = "on-completion")]
    pub on_completion: OnCompletion,
    /// \[apaa\] transaction specific arguments accessed from the application's approval-program and clear-state-program.
    #[serde(rename = "application-args", skip_serializing_if = "Option::is_none")]
    pub application_args: Option<Vec<String>>,
    /// \[apat\] List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program.
    #[serde(rename = "accounts", skip_serializing_if = "Option::is_none")]
    pub accounts: Option<Vec<String>>,
    /// \[apbx\] the boxes that can be accessed by this transaction (and others in the same group).
    #[serde(rename = "box-references", skip_serializing_if = "Option::is_none")]
    pub box_references: Option<Vec<BoxReference>>,
    /// \[apfa\] Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only.
    #[serde(rename = "foreign-apps", skip_serializing_if = "Option::is_none")]
    pub foreign_apps: Option<Vec<u64>>,
    /// \[apas\] lists the assets whose parameters may be accessed by this application's ApprovalProgram and ClearStateProgram. The access is read-only.
    #[serde(rename = "foreign-assets", skip_serializing_if = "Option::is_none")]
    pub foreign_assets: Option<Vec<u64>>,
    #[serde(rename = "local-state-schema", skip_serializing_if = "Option::is_none")]
    pub local_state_schema: Option<StateSchema>,
    #[serde(
        rename = "global-state-schema",
        skip_serializing_if = "Option::is_none"
    )]
    pub global_state_schema: Option<StateSchema>,
    /// \[apap\] Logic executed for every application transaction, except when on-completion is set to "clear". It can read and write global state for the application, as well as account-specific local state. Approval programs may reject the transaction.
    #[serde_as(as = "Option<serde_with::base64::Base64>")]
    #[serde(rename = "approval-program", skip_serializing_if = "Option::is_none")]
    pub approval_program: Option<Vec<u8>>,
    /// \[apsu\] Logic executed for application transactions with on-completion set to "clear". It can read and write global state for the application, as well as account-specific local state. Clear state programs cannot reject the transaction.
    #[serde_as(as = "Option<serde_with::base64::Base64>")]
    #[serde(
        rename = "clear-state-program",
        skip_serializing_if = "Option::is_none"
    )]
    pub clear_state_program: Option<Vec<u8>>,
    /// \[epp\] specifies the additional app program len requested in pages.
    #[serde(
        rename = "extra-program-pages",
        skip_serializing_if = "Option::is_none"
    )]
    pub extra_program_pages: Option<u32>,
    /// \[aprv\] the lowest application version for which this transaction should immediately fail. 0 indicates that no version check should be performed.
    #[serde(rename = "reject-version", skip_serializing_if = "Option::is_none")]
    pub reject_version: Option<u64>,
}

impl TransactionApplication {
    /// Constructor for TransactionApplication
    pub fn new(application_id: u64, on_completion: OnCompletion) -> TransactionApplication {
        TransactionApplication {
            application_id,
            on_completion,
            application_args: None,
            accounts: None,
            box_references: None,
            foreign_apps: None,
            foreign_assets: None,
            local_state_schema: None,
            global_state_schema: None,
            approval_program: None,
            clear_state_program: None,
            extra_program_pages: None,
            reject_version: None,
        }
    }
}
