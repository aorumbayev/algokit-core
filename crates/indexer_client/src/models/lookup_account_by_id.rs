/*
 * Indexer
 *
 * Algorand ledger analytics API.
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: Rust OpenAPI Generator
 */

use crate::models;
use serde::{Deserialize, Serialize};

use crate::models::Account;

/// (empty)
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct LookupAccountById {
    #[serde(rename = "account")]
    pub account: Account,
    /// Round at which the results were computed.
    #[serde(rename = "current-round")]
    pub current_round: u64,
}

impl LookupAccountById {
    /// Constructor for LookupAccountById
    pub fn new(account: Account, current_round: u64) -> LookupAccountById {
        LookupAccountById {
            account,
            current_round,
        }
    }
}
