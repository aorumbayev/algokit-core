/*
 * Indexer
 *
 * Algorand ledger analytics API.
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: Rust OpenAPI Generator
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// HoldingRef names a holding by referring to an Address and Asset it belongs to.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct HoldingRef {
    /// \[d\] Address in access list, or the sender of the transaction.
    #[serde(rename = "address")]
    pub address: String,
    /// \[s\] Asset ID for asset in access list.
    #[serde(rename = "asset")]
    pub asset: u64,
}

impl HoldingRef {
    /// Constructor for HoldingRef
    pub fn new(address: String, asset: u64) -> HoldingRef {
        HoldingRef { address, asset }
    }
}
