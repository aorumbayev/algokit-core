/*
 * Indexer
 *
 * Algorand ledger analytics API.
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: Rust OpenAPI Generator
 */

use crate::models;
use serde::{Deserialize, Serialize};
use serde_with::{Bytes, serde_as};

/// BoxReference names a box by its name and the application ID it belongs to.
#[serde_as]
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct BoxReference {
    /// Application ID to which the box belongs, or zero if referring to the called application.
    #[serde(rename = "app")]
    pub app: u64,
    /// Base64 encoded box name
    #[serde_as(as = "serde_with::base64::Base64")]
    #[serde(rename = "name")]
    pub name: Vec<u8>,
}

impl BoxReference {
    /// Constructor for BoxReference
    pub fn new(app: u64, name: Vec<u8>) -> BoxReference {
        BoxReference { app, name }
    }
}
