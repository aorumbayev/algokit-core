/*
 * Indexer
 *
 * Algorand ledger analytics API.
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: Rust OpenAPI Generator
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Specifies maximums on the number of each type that may be stored.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApplicationStateSchema {
    /// number of uints.
    #[serde(rename = "num-uint")]
    pub num_uint: u64,
    /// number of byte slices.
    #[serde(rename = "num-byte-slice")]
    pub num_byte_slice: u64,
}

impl ApplicationStateSchema {
    /// Constructor for ApplicationStateSchema
    pub fn new(num_uint: u64, num_byte_slice: u64) -> ApplicationStateSchema {
        ApplicationStateSchema {
            num_uint,
            num_byte_slice,
        }
    }
}
