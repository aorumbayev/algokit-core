/*
 * Indexer
 *
 * Algorand ledger analytics API.
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: Rust OpenAPI Generator
 */

use crate::models;
use serde::{Deserialize, Serialize};

use crate::models::AssetParams;

/// Fields for asset allocation, re-configuration, and destruction.
///
///
/// A zero value for asset-id indicates asset creation.
/// A zero value for the params indicates asset destruction.
///
/// Definition:
/// data/transactions/asset.go : AssetConfigTxnFields
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct TransactionAssetConfig {
    /// \[xaid\] ID of the asset being configured or empty if creating.
    #[serde(rename = "asset-id", skip_serializing_if = "Option::is_none")]
    pub asset_id: Option<u64>,
    #[serde(rename = "params", skip_serializing_if = "Option::is_none")]
    pub params: Option<AssetParams>,
}

impl TransactionAssetConfig {
    /// Default constructor for TransactionAssetConfig
    pub fn new() -> TransactionAssetConfig {
        TransactionAssetConfig::default()
    }
}
