/*
 * Indexer
 *
 * Algorand ledger analytics API.
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: Rust OpenAPI Generator
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Fields for an asset freeze transaction.
///
/// Definition:
/// data/transactions/asset.go : AssetFreezeTxnFields
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct TransactionAssetFreeze {
    /// \[fadd\] Address of the account whose asset is being frozen or thawed.
    #[serde(rename = "address")]
    pub address: String,
    /// \[faid\] ID of the asset being frozen or thawed.
    #[serde(rename = "asset-id")]
    pub asset_id: u64,
    /// \[afrz\] The new freeze status.
    #[serde(rename = "new-freeze-status")]
    pub new_freeze_status: bool,
}

impl TransactionAssetFreeze {
    /// Constructor for TransactionAssetFreeze
    pub fn new(address: String, asset_id: u64, new_freeze_status: bool) -> TransactionAssetFreeze {
        TransactionAssetFreeze {
            address,
            asset_id,
            new_freeze_status,
        }
    }
}
