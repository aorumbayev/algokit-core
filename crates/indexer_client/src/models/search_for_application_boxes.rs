/*
 * Indexer
 *
 * Algorand ledger analytics API.
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: Rust OpenAPI Generator
 */

use crate::models;
use serde::{Deserialize, Serialize};

use crate::models::BoxDescriptor;

/// Box names of an application
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SearchForApplicationBoxes {
    /// \[appidx\] application index.
    #[serde(rename = "application-id")]
    pub application_id: u64,
    #[serde(rename = "boxes")]
    pub boxes: Vec<BoxDescriptor>,
    /// Used for pagination, when making another request provide this token with the next parameter.
    #[serde(rename = "next-token", skip_serializing_if = "Option::is_none")]
    pub next_token: Option<String>,
}

impl SearchForApplicationBoxes {
    /// Constructor for SearchForApplicationBoxes
    pub fn new(application_id: u64, boxes: Vec<BoxDescriptor>) -> SearchForApplicationBoxes {
        SearchForApplicationBoxes {
            application_id,
            boxes,
            next_token: None,
        }
    }
}
