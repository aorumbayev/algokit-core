/*
 * Indexer
 *
 * Algorand ledger analytics API.
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: Rust OpenAPI Generator
 */

use crate::models;
use serde::{Deserialize, Serialize};

use crate::models::StateProofSignature;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct StateProofSigSlot {
    #[serde(rename = "signature", skip_serializing_if = "Option::is_none")]
    pub signature: Option<StateProofSignature>,
    /// \[l\] The total weight of signatures in the lower-numbered slots.
    #[serde(rename = "lower-sig-weight", skip_serializing_if = "Option::is_none")]
    pub lower_sig_weight: Option<u64>,
}

impl StateProofSigSlot {
    /// Default constructor for StateProofSigSlot
    pub fn new() -> StateProofSigSlot {
        StateProofSigSlot::default()
    }
}
