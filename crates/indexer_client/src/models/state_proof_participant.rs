/*
 * Indexer
 *
 * Algorand ledger analytics API.
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: Rust OpenAPI Generator
 */

use crate::models;
use serde::{Deserialize, Serialize};

use crate::models::StateProofVerifier;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct StateProofParticipant {
    #[serde(rename = "verifier", skip_serializing_if = "Option::is_none")]
    pub verifier: Option<StateProofVerifier>,
    /// \[w\]
    #[serde(rename = "weight", skip_serializing_if = "Option::is_none")]
    pub weight: Option<u64>,
}

impl StateProofParticipant {
    /// Default constructor for StateProofParticipant
    pub fn new() -> StateProofParticipant {
        StateProofParticipant::default()
    }
}
