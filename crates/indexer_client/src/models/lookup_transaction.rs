/*
 * Indexer
 *
 * Algorand ledger analytics API.
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: Rust OpenAPI Generator
 */

use crate::models;
use serde::{Deserialize, Serialize};

use crate::models::Transaction;

/// (empty)
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LookupTransaction {
    #[serde(rename = "transaction")]
    pub transaction: Transaction,
    /// Round at which the results were computed.
    #[serde(rename = "current-round")]
    pub current_round: u64,
}

impl LookupTransaction {
    /// Constructor for LookupTransaction
    pub fn new(transaction: Transaction, current_round: u64) -> LookupTransaction {
        LookupTransaction {
            transaction,
            current_round,
        }
    }
}
