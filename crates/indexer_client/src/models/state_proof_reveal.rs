/*
 * Indexer
 *
 * Algorand ledger analytics API.
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: Rust OpenAPI Generator
 */

use crate::models;
use serde::{Deserialize, Serialize};

use crate::models::StateProofParticipant;
use crate::models::StateProofSigSlot;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct StateProofReveal {
    /// The position in the signature and participants arrays corresponding to this entry.
    #[serde(rename = "position", skip_serializing_if = "Option::is_none")]
    pub position: Option<u64>,
    #[serde(rename = "sig-slot", skip_serializing_if = "Option::is_none")]
    pub sig_slot: Option<StateProofSigSlot>,
    #[serde(rename = "participant", skip_serializing_if = "Option::is_none")]
    pub participant: Option<StateProofParticipant>,
}

impl StateProofReveal {
    /// Default constructor for StateProofReveal
    pub fn new() -> StateProofReveal {
        StateProofReveal::default()
    }
}
