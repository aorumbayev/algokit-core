/*
 * Algod REST API.
 *
 * API endpoint for algod operations.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@algorand.com
 * Generated by: Rust OpenAPI Generator
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Participation ID of the submission
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct AddParticipationKey {
    /// encoding of the participation ID.
    #[serde(rename = "partId")]
    pub part_id: String,
}

impl AddParticipationKey {
    /// Constructor for AddParticipationKey
    pub fn new(part_id: String) -> AddParticipationKey {
        AddParticipationKey { part_id }
    }
}
